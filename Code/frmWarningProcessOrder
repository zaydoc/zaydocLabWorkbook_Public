Private Sub CommandButton1_Click()

    'Activate all worksheets that need to be accessed
    Application.ScreenUpdating = False
    Sheets("WorkingData").Visible = True
    Sheets("RESOURCEDATABASE_Export").Visible = True
    Sheets("Technician_Export").Visible = True
    Sheets("ProgramStorage").Visible = True
    
    'Check to see if there is any data in the RESOURCEDATABASE_Import worksheet to process
    If Len(Cells(15, 1).Text) > 0 Then
    
        'Find the last row of data in the RESOURCEDATABASE_Import worksheet
        Dim r As Long
        Dim LastRowImportRESOURCEDATABASE As Long
        Dim LastRowExportRESOURCEDATABASE As Long
        Dim LastRowExportTech As Long
        Dim LastRowWorkingData As Long

        Application.ScreenUpdating = False 'Turns off screenupdating to prevent screen flashing
        
        Sheets("ProgramStorage").Range("C32") = "1" 'Resets starting point of cards to the first record
        r = 15
    
        Do While r < 65536 And Len(Cells(r, 1).Text) > 0
        r = r + 1
        Loop
    
        LastRowImportRESOURCEDATABASE = r
        
        'Sort the data in the RESOURCEDATABASE_Import worksheet to match printed orders
        Sheets("RESOURCEDATABASE_Import").Range("A15:K" & LastRowImportRESOURCEDATABASE).Select
        Selection.Sort Key1:=Range("F1"), Order1:=xlAscending, Key2:=Range("C1"), Order2:=xlAscending, Key3:=Range("D1"), Order3:=xlAscending, Header:=xlNo
        Sheets("RESOURCEDATABASE_Import").Range("A15").Select
    
        'Delete all data in WorkingData worksheet if any exists
        Sheets("WorkingData").Cells.ClearContents
        Sheets("ProgramStorage").Rows("19").Copy Sheets("WorkingData").Rows("1")
    
        'Delete all data in RESOURCEDATABASE_Export worksheet if any exists
        Sheets("RESOURCEDATABASE_Export").Cells.ClearContents
        Sheets("ProgramStorage").Rows("22").Copy Sheets("RESOURCEDATABASE_Export").Rows("1")

        'Delete all data in Technician_Export worksheet if any exists
        Sheets("Technician_Export").Cells.ClearContents
        Sheets("ProgramStorage").Rows("25:29").Copy Sheets("Technician_Export").Rows("1:5")
    
        'Copy data from RESOURCEDATABASE_Import worksheet to WorkingData worksheet
            'Field "Order Request Item ID"
            Sheets("RESOURCEDATABASE_Import").Range("A15:A" & LastRowImportRESOURCEDATABASE).Copy Destination:=Sheets("WorkingData").Range("A2")
            'Field "Order Number"
            Sheets("RESOURCEDATABASE_Import").Range("B15:B" & LastRowImportRESOURCEDATABASE).Copy Destination:=Sheets("WorkingData").Range("H2")
            'Field "Type"
            Sheets("RESOURCEDATABASE_Import").Range("C15:C" & LastRowImportRESOURCEDATABASE).Copy Destination:=Sheets("WorkingData").Range("FQ2")
            'Field "Inventory"
            Sheets("RESOURCEDATABASE_Import").Range("D15:D" & LastRowImportRESOURCEDATABASE).Copy Destination:=Sheets("WorkingData").Range("B2")
            'Field "Taxon"
            Sheets("RESOURCEDATABASE_Import").Range("F15:F" & LastRowImportRESOURCEDATABASE).Copy Destination:=Sheets("WorkingData").Range("D2")
            'Field "Inventory Viability Rule"
            Sheets("RESOURCEDATABASE_Import").Range("K15:K" & LastRowImportRESOURCEDATABASE).Copy
            Sheets("WorkingData").Range("FW2").PasteSpecial xlPasteValues
            Application.CutCopyMode = False
   
        'Find the new last row of the WorkingData worksheet
            ActiveWorkbook.Sheets("WorkingData").Activate
        
            r = 2
        
            Do While r < 65536 And Len(Cells(r, 1).Text) > 0
                r = r + 1
            Loop
    
            LastRowWorkingData = r
        
        'Insert formulas and required data in new data rows of WorkingData worksheet
            'Insert required "Test Date Format" field contents for RESOURCEDATABASE_Export
            r = 2
            Do While r < LastRowWorkingData
                Range("FP" & r).Value = "mm/dd/yyyy"
                r = r + 1
            Loop
        
            'Insert calculated Rep Total fields and Duration/Day Count fields for each Count Day
            r = 2
            Do While r < LastRowWorkingData
                '1st Count
                Range("R" & r).Formula = "=V" & r & "+Z" & r & "+AD" & r & "+AH" & r & "+AL" & r
                Range("S" & r).Formula = "=W" & r & "+AA" & r & "+AE" & r & "+AI" & r & "+AM" & r
                Range("T" & r).Formula = "=X" & r & "+AB" & r & "+AF" & r & "+AJ" & r & "+AN" & r
                Range("U" & r).Formula = "=Y" & r & "+AC" & r & "+AG" & r & "+AK" & r & "+AO" & r
                Range("Q" & r).Formula = "=IF(P" & r & "<=F" & r & ",0,DATEDIF(F" & r & ",P" & r & "," & Chr(34) & "d" & Chr(34) & "))"
                '2nd Count
                Range("AR" & r).Formula = "=AV" & r & "+AZ" & r & "+BD" & r & "+BH" & r & "+BL" & r
                Range("AS" & r).Formula = "=AW" & r & "+BA" & r & "+BE" & r & "+BI" & r & "+BM" & r
                Range("AT" & r).Formula = "=AX" & r & "+BB" & r & "+BF" & r & "+BJ" & r & "+BN" & r
                Range("AU" & r).Formula = "=AY" & r & "+BC" & r & "+BG" & r & "+BK" & r & "+BO" & r
                Range("AQ" & r).Formula = "=IF(AP" & r & "<=F" & r & ",0,DATEDIF(F" & r & ",AP" & r & "," & Chr(34) & "d" & Chr(34) & "))"
                '3rd Count
                Range("BR" & r).Formula = "=BV" & r & "+BZ" & r & "+CD" & r & "+CH" & r & "+CL" & r
                Range("BS" & r).Formula = "=BW" & r & "+CA" & r & "+CE" & r & "+CI" & r & "+CM" & r
                Range("BT" & r).Formula = "=BX" & r & "+CB" & r & "+CF" & r & "+CJ" & r & "+CN" & r
                Range("BU" & r).Formula = "=BY" & r & "+CC" & r & "+CG" & r & "+CK" & r & "+CO" & r
                Range("BQ" & r).Formula = "=IF(BP" & r & "<=F" & r & ",0,DATEDIF(F" & r & ",BP" & r & "," & Chr(34) & "d" & Chr(34) & "))"
                '4th Count
                Range("CR" & r).Formula = "=CV" & r & "+CZ" & r & "+DD" & r & "+DH" & r & "+DL" & r
                Range("CS" & r).Formula = "=CW" & r & "+DA" & r & "+DE" & r & "+DI" & r & "+DM" & r
                Range("CT" & r).Formula = "=CX" & r & "+DB" & r & "+DF" & r & "+DJ" & r & "+DN" & r
                Range("CU" & r).Formula = "=CY" & r & "+DC" & r & "+DG" & r & "+DK" & r & "+DO" & r
                Range("CQ" & r).Formula = "=IF(CP" & r & "<=F" & r & ",0,DATEDIF(F" & r & ",CP" & r & "," & Chr(34) & "d" & Chr(34) & "))"
                '5th Count
                Range("DR" & r).Formula = "=DV" & r & "+DZ" & r & "+ED" & r & "+EH" & r & "+EL" & r
                Range("DS" & r).Formula = "=DW" & r & "+EA" & r & "+EE" & r & "+EI" & r & "+EM" & r
                Range("DT" & r).Formula = "=DX" & r & "+EB" & r & "+EF" & r & "+EJ" & r & "+EN" & r
                Range("DU" & r).Formula = "=DY" & r & "+EC" & r & "+EG" & r & "+EK" & r & "+EO" & r
                Range("DQ" & r).Formula = "=IF(DP" & r & "<=F" & r & ",0,DATEDIF(F" & r & ",DP" & r & "," & Chr(34) & "d" & Chr(34) & "))"
                '6th Count
                Range("ER" & r).Formula = "=EV" & r & "+EZ" & r & "+FD" & r & "+FH" & r & "+FL" & r
                Range("ES" & r).Formula = "=EW" & r & "+FA" & r & "+FE" & r & "+FI" & r & "+FM" & r
                Range("ET" & r).Formula = "=EX" & r & "+FB" & r & "+FF" & r & "+FJ" & r & "+FN" & r
                Range("EU" & r).Formula = "=EY" & r & "+FC" & r & "+FG" & r & "+FK" & r & "+FO" & r
                Range("EQ" & r).Formula = "=IF(FP" & r & "<=F" & r & ",0,DATEDIF(F" & r & ",FP" & r & "," & Chr(34) & "d" & Chr(34) & "))"
                'Go to next row
                r = r + 1
            Loop
            
            'Insert calculated Total Normal Seed fields
            r = 2
            Do While r < LastRowWorkingData
                Range("M" & r).Formula = "=V" & r & "+W" & r & "+X" & r & "+Y" & r & "+AV" & r & "+AW" & r & "+AX" & r & "+AY" & r & "+BV" & r & "+BW" & r & "+BX" & r & "+BY" & r & "+CV" & r & "+CW" & r & "+CX" & r & "+CY" & r & "+DV" & r & "+DW" & r & "+DX" & r & "+DY" & r & "+EV" & r & "+EW" & r & "+EX" & r & "+EY" & r
                r = r + 1
            Loop
        
            'Insert calculated Percent Normal Seed fields
            r = 2
            Do While r < LastRowWorkingData
                Range("N" & r).Formula = "=M" & r & "/L" & r
                r = r + 1
            Loop
            
            'Insert calculated Total Abnormal Seed fields
            r = 2
            Do While r < LastRowWorkingData
                Range("FT" & r).Formula = "=Z" & r & "+AA" & r & "+AB" & r & "+AC" & r & "+AZ" & r & "+BA" & r & "+BB" & r & "+BC" & r & "+BZ" & r & "+CA" & r & "+CB" & r & "+CC" & r & "+CZ" & r & "+DA" & r & "+DB" & r & "+DC" & r & "+DZ" & r & "+EA" & r & "+EB" & r & "+EC" & r & "+EZ" & r & "+FA" & r & "+FB" & r & "+FC" & r
                r = r + 1
            Loop
            
            'Insert calculated Total Dormant Seed fields
            r = 2
            Do While r < LastRowWorkingData
                Range("FU" & r).Formula = "=AH" & r & "+AI" & r & "+AJ" & r & "+AK" & r & "+BH" & r & "+BI" & r & "+BJ" & r & "+BK" & r & "+CH" & r & "+CI" & r & "+CJ" & r & "+CK" & r & "+DH" & r & "+DI" & r & "+DJ" & r & "+DK" & r & "+EH" & r & "+EI" & r & "+EJ" & r & "+EK" & r & "+FH" & r & "+FI" & r & "+FJ" & r & "+FK" & r
                r = r + 1
            Loop
            
            'Insert calculated Total Hard Seed field
            r = 2
            Do While r < LastRowWorkingData
                Range("FV" & r).Formula = "=AL" & r & "+AM" & r & "+AN" & r & "+AO" & r & "+BL" & r & "+BM" & r & "+BN" & r & "+BO" & r & "+CL" & r & "+CM" & r & "+CN" & r & "+CO" & r & "+DL" & r & "+DM" & r & "+DN" & r & "+DO" & r & "+EL" & r & "+EM" & r & "+EN" & r & "+EO" & r & "+FL" & r & "+FM" & r & "+FN" & r & "+FO" & r
                r = r + 1
            Loop
    
        'Unload pop-up dialog and return to RESOURCEDATABASE_Import worksheet
        ActiveWorkbook.Sheets("RESOURCEDATABASE_Import").Activate
        Application.ScreenUpdating = True 'Turns screenupdating back on
        Unload WarningProcessOrder
        Cells(15, 1).Select
        MsgBox "Data converted into cards successfully."
    
    'If RESOURCEDATABASE_Import worksheet was empty, return an error message
    Else
        
        Unload WarningProcessOrder
        Cells(15, 1).Select
        MsgBox "No data to process." & vbNewLine & vbNewLine & "You need to copy data to the RESOURCEDATABASE Import worksheet!"
    
    End If

    'Turns back off worksheets that were necessary for processing
    Sheets("WorkingData").Visible = False
    Sheets("RESOURCEDATABASE_Export").Visible = False
    Sheets("Technician_Export").Visible = False
    Sheets("ProgramStorage").Visible = False
    Application.ScreenUpdating = True

End Sub

Private Sub CommandButton2_Click()

    'Unloads pop-up dialog box and returns to RESOURCEDATABASE_Import worksheet
    Unload WarningProcessOrder
    Cells(15, 1).Select

End Sub
